apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "labels" . | indent 4 }}
    high-availability-config.resources.gardener.cloud/type: server
spec:
  revisionHistoryLimit: 5
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
{{ include "labels" . | indent 6 }}
  template:
    metadata:
      labels:
        networking.gardener.cloud/to-dns: allowed
        networking.gardener.cloud/to-runtime-apiserver: allowed
        networking.resources.gardener.cloud/to-virtual-garden-kube-apiserver-tcp-443: allowed
{{ include "labels" . | indent 8 }}
    spec:
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      serviceAccountName: {{ include "name" . }}
      containers:
      - name: {{ include "name" . }}
        image: {{ .Values.image }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        args:
        - --webhook-config-server-port={{ .Values.webhookConfig.serverPort }}
        - --webhook-config-mode=url
        - --webhook-config-url={{ printf "%s.%s" (include "name" .) (.Release.Namespace) }}
        - --webhook-config-namespace={{ .Release.Namespace }}
        - --kubeconfig={{ required ".Values.projectedKubeconfig.baseMountPath is required" .Values.projectedKubeconfig.baseMountPath }}/kubeconfig
        - --health-bind-address=:{{ .Values.healthPort }}
        - --leader-election-id={{ include "leaderelectionid" . }}
        env:
        - name: LEADER_ELECTION_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: SOURCE_CLUSTER
          value: enabled
        ports:
        - name: webhook-server
          containerPort: {{ .Values.webhookConfig.serverPort }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.healthPort }}
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /readyz
            port: {{ .Values.healthPort }}
            scheme: HTTP
          initialDelaySeconds: 5
{{- if .Values.resources }}
        resources:
{{ toYaml .Values.resources | nindent 10 }}
{{- end }}
        volumeMounts:
        - name: kubeconfig
          mountPath: {{ required ".Values.projectedKubeconfig.baseMountPath is required" .Values.projectedKubeconfig.baseMountPath }}
          readOnly: true
      volumes:
      - name: kubeconfig
        projected:
          defaultMode: 420
          sources:
          - secret:
              items:
              - key: kubeconfig
                path: kubeconfig
              name: {{ required ".Values.projectedKubeconfig.genericKubeconfigSecretName is required" .Values.projectedKubeconfig.genericKubeconfigSecretName }}
              optional: false
          - secret:
              items:
              - key: token
                path: token
              name: {{ required ".Values.projectedKubeconfig.tokenSecretName is required" .Values.projectedKubeconfig.tokenSecretName }}
              optional: false
